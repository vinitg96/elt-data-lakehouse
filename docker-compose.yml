services:
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      #- ./minio:/data
      - minio_internal_data:/data
    environment:
      - MINIO_ROOT_USER=minio123
      - MINIO_ROOT_PASSWORD=minio123
    command: minio server /data --console-address ":9001"
    networks:
      - airflow_network  
  

  metaduck:
    build:
      context: .
      dockerfile: ./services/metabase/metabase_duckdb.dockerfile
    image: metaduck_img
    volumes:
      - ./services/dbt_workflow/datawarehouse/:/app/datawarehouse/
    ports:
      - '80:3000'
    environment:
      - MB_PLUGINS_DIR=/home/plugins
      - MB_DB_TYPE=postgres
      - MB_DB_DBNAME=postgres
      - MB_DB_PORT=5432
      - MB_DB_USER=postgres
      - MB_DB_PASS=1234
      - MB_DB_HOST=postgres #nome do serviços
    mem_limit: 2g
    container_name: metaduck
    depends_on:
      - postgres
    networks:
      - airflow_network  # Conecta à rede do airflow

  postgres:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/ #volume nomeado
    ports:
      - '5433:5432' #host:container
    environment:
      - POSTGRES_PASSWORD=1234
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    container_name: postgres_metabase
    networks:
      - airflow_network  # Conecta à rede do Astro

#named volumes    
volumes:
  postgres_data:
    name: 'postgres_metabase_volume'
    driver: local
  minio_internal_data:
    name: 'minio_internal_volume'
    driver: 'local'

# Usar a rede criada pelo Astro CLI
networks:
  airflow_network:
    external: true 




      
    
